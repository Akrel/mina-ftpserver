<?xml version="1.0"?>
<!--
  Copyright 2002-2004 The Apache Software Foundation or its licensors,
  as applicable.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<project default="usage" basedir=".">
    
    <!-- project name -->
    <property name="project.name"    value="ftpserver"/>
    <property name="project.title"   value="FtpServer"/>
    <property name="project.version" value="1.0"/>

    <!-- all project directories -->
    <property name="project.dir"           value="${basedir}"/>
    <property name="project.src"           value="${project.dir}/src"/>
    <property name="project.src.java"      value="${project.src}/java"/>
    <property name="project.src.bin"       value="${project.src}/bin"/>
    <property name="project.build"         value="${project.dir}/build"/>
    <property name="project.build.classes" value="${project.build}/classes"/>
    <property name="project.build.dist"    value="${project.build}/dist"/>
    <property name="project.build.site"    value="${project.build}/site"/>
    <property name="project.build.javadoc" value="${project.build.site}/javadoc"/>
    
    <!-- all compilatin attributes -->
    <property name="project.compiler.optimization" value="off"/>
    <property name="project.compiler.debug"        value="on"/>
    <property name="project.compiler.deprecation"  value="on"/>

    <!-- FORREST_HOME must be set as an environment variable -->
    <property environment="env"/>
    <property name="forrest.home" value="${env.FORREST_HOME}"/>
    
    <!-- build initialization block -->
    <target name="init">
        <tstamp/>
        <echo message="--------- ${project.name} ${project.version} ---------"/>
        <echo message="Build started at: ${TSTAMP} ${TODAY}"/>
        <echo message="java.home   = ${java.home}"/>
        <echo message="project.dir = ${basedir}"/>
    </target>

    <!-- display usage information -->
    <target name="usage" depends="init">
        <echo message="usage:    display this message"/>
        <echo message="build:    compile all java files and copy resources"/>
        <echo message="clean:    remove all temporary files/directories"/>
        <echo message="doc:      generate all documents"/>
        <echo message="javadoc:  generate the javadocs"/>
        <echo message="site:     generate FtpServer web site"/>
        <echo message="dist:     generate binary and source distributions"/>
    </target>

    <!-- compile all the java files and copy resources -->
    <target name="build" depends="init">
        <mkdir dir="${project.build.classes}"/>
        <javac srcdir="${project.src.java}" 
               destdir="${project.build.classes}" 
               debug="${project.compiler.debug}" 
               optimize="${project.compiler.optimization}" 
               deprecation="${project.compiler.deprecation}"/>

        <copy todir="${project.build.classes}">
            <fileset dir="${project.src.java}">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>

    <!-- remove all the generated files -->
    <target name="clean" depends="init">
        <delete dir="${project.build}"/>
    </target>    
    
    <!-- generate doc -->
    <target name="doc" depends="init,check-forrest-installed">
        <condition property="forrest.script" value="${forrest.home}/bin/forrest">
            <os family="unix"/>
        </condition>
        <condition property="forrest.script" value="${forrest.home}/bin/forrest.bat">
            <os family="windows"/>
        </condition>
        
        <exec dir="${project.dir}" executable="${forrest.script}">
            <arg line="site"/>
        </exec>
    </target>
    
    <!-- check forrest installation -->
    <target name="check-forrest-installed" unless="env.FORREST_HOME">
        <echo message="Please install Apache Forrest (http://xml.apache.org/forrest/index.html)."/>
        <echo message="After that set FORREST_HOME environment variable."/>
        <fail message="Apache Forrest is not installed."/>
    </target>
    
    <!-- generate the javadocs -->
    <target name="javadoc" depends="init">
        <mkdir dir="${project.build.javadoc}"/>
        <javadoc sourcepath="${project.src.java}" 
                 destdir="${project.build.javadoc}"
                 packagenames="*" 
                 author="true"
                 windowtitle="${project.title} API"/>
    </target>

    <!-- generate all binary distributions  -->
    <target name="dist" depends="init,build,doc,javadoc">
        <mkdir dir="${project.build.dist}"/>
        <jar destfile="${project.build.dist}/${project.name}.jar" basedir="${project.build.classes}"/>
        <fixcrlf srcdir="${project.dir}" eol="lf" eof="remove" includes="**/*.sh"/>
        <fixcrlf srcdir="${project.dir}" eol="crlf" includes="**/*.bat"/>
        
        <zip destfile="${project.build.dist}/${project.name}-${project.version}-bin.zip">
            <zipfileset dir="${project.build.dist}"  prefix="${project.name}-${project.version}/lib" includes="*.jar"/>
            <zipfileset dir="${project.src.bin}"     prefix="${project.name}-${project.version}"/>
            <zipfileset dir="${project.build.site}"  prefix="${project.name}-${project.version}/doc"/>
            <zipfileset dir="${project.dir}"         prefix="${project.name}-${project.version}" includes="*.txt"/>
            <zipfileset dir="${project.dir}/res"     prefix="${project.name}-${project.version}/res" excludes="**/*.gen"/>
        </zip>
        
        <zip destfile="${project.build.dist}/${project.name}-${project.version}-src.zip">
            <zipfileset dir="${project.src}"     prefix="${project.name}-${project.version}/src"/>
            <zipfileset dir="${project.dir}"     prefix="${project.name}-${project.version}" includes="*.bat"/>
            <zipfileset dir="${project.dir}"     prefix="${project.name}-${project.version}" includes="*.txt"/>
            <zipfileset dir="${project.dir}"     prefix="${project.name}-${project.version}" includes="*.xml"/>
            <zipfileset dir="${project.dir}"     prefix="${project.name}-${project.version}" includes="*.properties"/>
            <zipfileset dir="${project.dir}/res" prefix="${project.name}-${project.version}/res" excludes="**/*.gen"/>
        </zip>
    </target>

    <!-- generate site -->
    <target name="site" depends="init,dist">
        <mkdir dir="${project.build.site}"/>
        <copy file="${project.build.dist}/${project.name}-${project.version}-bin.zip" todir="${project.build.site}"/>
        <copy file="${project.build.dist}/${project.name}-${project.version}-src.zip" todir="${project.build.site}"/>
    </target>
    
</project>
